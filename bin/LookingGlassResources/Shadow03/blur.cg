//float4 blur_x_ps(
//    in float2 uv : TEXCOORD0,
//    uniform float4 invSMSize,
//    uniform sampler2D map : TEXUNIT0): COLOR0 {
//    float3 sample = float3(0, 0, 0);
//    // 5-pixel wide guassian blur
//    float gaussWeights[11] = {
//        0.016329262, 0.038229991, 0.074087434, 0.11884686, 0.15780966,
//        0.17345317, // center
//        0.15780966, 0.11884686, 0.074087434, 0.038229991, 0.016329262
//    };
//    float offsets[11] = {
//        -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5
//    };
//    for (float i = 0; i < 11; i += 1)
//        sample +=
//            tex2D(map, float2(uv.x, uv.y + offsets[i] * invSMSize.y)).rgb * gaussWeights[i];
//    return float4(sample, 1);
//}
//
//float4 blur_y_ps(
//    in float2 uv : TEXCOORD0,
//    uniform float4 invSMSize,
//    uniform sampler2D map : TEXUNIT0): COLOR0 {
//    float3 sample = float3(0, 0, 0);
//    // 5-pixel wide guassian blur
//    float gaussWeights[11] = {
//        0.016329262, 0.038229991, 0.074087434, 0.11884686, 0.15780966,
//        0.17345317, // center
//        0.15780966, 0.11884686, 0.074087434, 0.038229991, 0.016329262
//    };
//    float offsets[11] = {
//        -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5
//    };
//    for (float i = 0; i < 11; i += 1)
//        sample +=
//            tex2D(map, float2(uv.x + offsets[i] * invSMSize.y, uv.y)).rgb * gaussWeights[i];
//    return float4(sample, 1);
//}

float4 blur_ps(
    in float2 uv : TEXCOORD0,
    uniform float4 invSMSize,
    uniform sampler2D map : TEXUNIT0): COLOR0 {
    float3 sample = float3(0, 0, 0);

    float radius = 3;
    for (float x = -radius; x <= radius; x += 1) {
        for (float y = -radius; y <= radius; y += 1) {
            sample += tex2D(map, float2(uv.x + x * invSMSize.x, uv.y + y * invSMSize.y)).rgb;
        }
    }
    return float4(sample / ((radius * 2 + 1) * (radius * 2 + 1)), 1);
}
